import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.QBCT-Upj.js";const m=JSON.parse('{"title":"Candies","description":"","frontmatter":{"title":"Candies"},"headers":[],"relativePath":"content/snippet/code-signal/arcade/the-core/intro-gates/candies/index.md","filePath":"content/snippet/code-signal/arcade/the-core/intro-gates/candies/index.md"}'),l={name:"content/snippet/code-signal/arcade/the-core/intro-gates/candies/index.md"},o=n(`<h1 id="candies" tabindex="-1">Candies <a class="header-anchor" href="#candies" aria-label="Permalink to &quot;Candies&quot;">​</a></h1><p><code>n</code> children have got <code>m</code> pieces of candy. They want to eat as much candy as they can, but each child must eat exactly the same amount of candy as any other child. Determine how many pieces of candy will be eaten by all the children together. Individual pieces of candy cannot be split.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>For <code>n = 3</code> and <code>m = 10</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">candies(n, m) = 9</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">candies(n, m) = 9</span></span></code></pre></div><p>Each child will eat <code>3</code> pieces. So the answer is <code>9</code>.</p><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xdJWj" id="tab-RsZv1YF" checked="checked"><label for="tab-RsZv1YF">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">candies</span><span style="color:#E1E4E8;">(n, m):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (m</span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">n) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> n</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(candies(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">candies</span><span style="color:#24292E;">(n, m):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (m</span><span style="color:#D73A49;">//</span><span style="color:#24292E;">n) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> n</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(candies(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div>`,8),p=[o];function c(t,i,r,d,h,y){return a(),e("div",null,p)}const E=s(l,[["render",c]]);export{m as __pageData,E as default};
