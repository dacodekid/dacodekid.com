import{_ as s,o as a,c as e,R as i}from"./chunks/framework.eQfkPAEx.js";const b=JSON.parse('{"title":"Extra Number","description":"","frontmatter":{"title":"Extra Number"},"headers":[],"relativePath":"content/snippet/code-signal/arcade/the-core/at-the-crossroads/extra-number/index.md","filePath":"content/snippet/code-signal/arcade/the-core/at-the-crossroads/extra-number/index.md"}'),n={name:"content/snippet/code-signal/arcade/the-core/at-the-crossroads/extra-number/index.md"},t=i(`<h1 id="extra-number" tabindex="-1">Extra Number <a class="header-anchor" href="#extra-number" aria-label="Permalink to &quot;Extra Number&quot;">​</a></h1><p>You&#39;re given three integers, <code>a</code>, <code>b</code> and <code>c</code>. It is guaranteed that two of these integers are equal to each other. What is the value of the third integer?</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>For <code>a = 2</code>, <code>b = 7</code>, and <code>c = 2</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>extra_number(a, b, c) = 7</span></span></code></pre></div><p>The two equal numbers are <code>a</code> and <code>c</code>. The third number (<code>b</code>) equals <code>7</code>, which is the answer.</p><h2 id="input-output" tabindex="-1">Input/Output <a class="header-anchor" href="#input-output" aria-label="Permalink to &quot;Input/Output&quot;">​</a></h2><ul><li><p><strong>[input] integer a</strong></p><p><em>Guaranteed constraints:</em><code>1 ≤ a ≤ 109</code>.</p></li><li><p><strong>[input] integer b</strong></p><p><em>Guaranteed constraints:</em><code>1 ≤ b ≤ 109</code>.</p></li><li><p><strong>[input] integer c</strong></p><p><em>Guaranteed constraints:</em><code>1 ≤ c ≤ 109</code>.</p></li></ul><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-FK8eX" id="tab-F03ykEu" checked="checked"><label for="tab-F03ykEu">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> extra_number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b, c):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(extra_number(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div></div>`,10),p=[t];function r(l,h,d,o,c,k){return a(),e("div",null,p)}const E=s(n,[["render",r]]);export{b as __pageData,E as default};
