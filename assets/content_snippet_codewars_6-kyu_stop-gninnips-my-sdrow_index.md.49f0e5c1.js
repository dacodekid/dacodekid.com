import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.af1155d1.js";const h=JSON.parse('{"title":"Stop gninnipS My sdroW!","description":"","frontmatter":{"title":"Stop gninnipS My sdroW!"},"headers":[],"relativePath":"content/snippet/codewars/6-kyu/stop-gninnips-my-sdrow/index.md","filePath":"content/snippet/codewars/6-kyu/stop-gninnips-my-sdrow/index.md"}'),e={name:"content/snippet/codewars/6-kyu/stop-gninnips-my-sdrow/index.md"},l=o(`<h1 id="stop-gninnips-my-sdrow" tabindex="-1">Stop gninnipS My sdroW! <a class="header-anchor" href="#stop-gninnips-my-sdrow" aria-label="Permalink to &quot;Stop gninnipS My sdroW!&quot;">​</a></h1><p>Write a function that takes in a string of one or more words, and returns the same string, but with all five or more letter words reversed (Just like the name of this Kata). Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">spin_words( &quot;Hey fellow warriors&quot; ) =&gt; returns &quot;Hey wollef sroirraw&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">spin_words( &quot;This is a test&quot;) =&gt; returns &quot;This is a test&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">spin_words( &quot;This is another test&quot; )=&gt; returns &quot;This is rehtona test&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">spin_words( &quot;Hey fellow warriors&quot; ) =&gt; returns &quot;Hey wollef sroirraw&quot;</span></span>
<span class="line"><span style="color:#24292e;">spin_words( &quot;This is a test&quot;) =&gt; returns &quot;This is a test&quot;</span></span>
<span class="line"><span style="color:#24292e;">spin_words( &quot;This is another test&quot; )=&gt; returns &quot;This is rehtona test&quot;</span></span></code></pre></div><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-lzNf6" id="tab-jnEUKh3" checked="checked"><label for="tab-jnEUKh3">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">spin_words</span><span style="color:#E1E4E8;">(sentence):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39; &#39;</span><span style="color:#E1E4E8;">.join([word </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(word) </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> word[::</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> word </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> sentence.split()])</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(spin_words(</span><span style="color:#9ECBFF;">&quot;Hey fellow warriors&quot;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">spin_words</span><span style="color:#24292E;">(sentence):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;">.join([word </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(word) </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> word[::</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> word </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> sentence.split()])</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(spin_words(</span><span style="color:#032F62;">&quot;Hey fellow warriors&quot;</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div>`,6),p=[l];function t(r,i,c,d,y,u){return n(),a("div",null,p)}const w=s(e,[["render",t]]);export{h as __pageData,w as default};
