import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.QBCT-Upj.js";const E=JSON.parse('{"title":"Narcissistic Number","description":"","frontmatter":{"title":"Narcissistic Number"},"headers":[],"relativePath":"content/snippet/codewars/6-kyu/narcissistic-number/index.md","filePath":"content/snippet/codewars/6-kyu/narcissistic-number/index.md"}'),l={name:"content/snippet/codewars/6-kyu/narcissistic-number/index.md"},o=e(`<h1 id="narcissistic-number" tabindex="-1">Narcissistic Number <a class="header-anchor" href="#narcissistic-number" aria-label="Permalink to &quot;Narcissistic Number&quot;">​</a></h1><p>A <a href="https://en.wikipedia.org/wiki/Narcissistic_number" target="_blank" rel="noreferrer">Narcissistic Number</a> is a positive number which is the sum of its own digits, each raised to the power of the number of digits in a given base. In this Kata, we will restrict ourselves to decimal (base 10).</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>For example, take 153 (3 digits), which is narcisstic:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153</span></span></code></pre></div><p>and 1652 (4 digits), which isn&#39;t:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">1^4 + 6^4 + 5^4 + 2^4 = 1 + 1296 + 625 + 16 = 1938</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1^4 + 6^4 + 5^4 + 2^4 = 1 + 1296 + 625 + 16 = 1938</span></span></code></pre></div><h2 id="the-challenge" tabindex="-1">The Challenge: <a class="header-anchor" href="#the-challenge" aria-label="Permalink to &quot;The Challenge:&quot;">​</a></h2><p>Your code must return <strong>true</strong> or <strong>false</strong> (not &#39;true&#39; and &#39;false&#39;) depending upon whether the given number is a Narcissistic number in base 10. This may be <strong>True</strong> and <strong>False</strong> in your language, e.g. PHP.</p><p>Error checking for text strings or other invalid inputs is not required, only valid positive non-zero integers will be passed into the function.</p><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Natcf" id="tab-S4ofj_m" checked="checked"><label for="tab-S4ofj_m">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">narcissistic_number</span><span style="color:#E1E4E8;">(value):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(digit) </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(value)) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> digit </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(value))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(narcissistic_number(</span><span style="color:#79B8FF;">4887</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">narcissistic_number</span><span style="color:#24292E;">(value):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(digit) </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(value)) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> digit </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(value))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(narcissistic_number(</span><span style="color:#005CC5;">4887</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div>`,12),p=[o];function t(r,i,c,d,u,h){return a(),n("div",null,p)}const b=s(l,[["render",t]]);export{E as __pageData,b as default};
