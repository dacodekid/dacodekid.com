import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.b2e84fab.js";const k=JSON.parse('{"title":"Take a Ten Minute Walk","description":"","frontmatter":{"title":"Take a Ten Minute Walk"},"headers":[],"relativePath":"content/snippet/codewars/6-kyu/take-a-ten-minute-walk/index.md","filePath":"content/snippet/codewars/6-kyu/take-a-ten-minute-walk/index.md"}'),l={name:"content/snippet/codewars/6-kyu/take-a-ten-minute-walk/index.md"},o=e(`<h1 id="take-a-ten-minute-walk" tabindex="-1">Take a Ten Minute Walk <a class="header-anchor" href="#take-a-ten-minute-walk" aria-label="Permalink to &quot;Take a Ten Minute Walk&quot;">​</a></h1><p>You live in the city of Cartesia where all roads are laid out in a perfect grid. You arrived ten minutes too early to an appointment, so you decided to take the opportunity to go for a short walk. The city provides its citizens with a Walk Generating App on their phones -- everytime you press the button it sends you an array of one-letter strings representing directions to walk (eg. [&#39;n&#39;, &#39;s&#39;, &#39;w&#39;, &#39;e&#39;]). You always walk only a single block for each letter (direction) and you know it takes you one minute to traverse one city block, so create a function that will return true if the walk the app gives you will take you exactly ten minutes (you don&#39;t want to be early or late!) and will, of course, return you to your starting point. Return false otherwise.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>you will always receive a valid array containing a random assortment of direction letters (&#39;n&#39;, &#39;s&#39;, &#39;e&#39;, or &#39;w&#39; only). It will never give you an empty array (that&#39;s not a walk, that&#39;s standing still!).</p></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;] =&gt; &#39;should return True&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">[&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;] =&gt; &#39;should return False&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">[&#39;w&#39;] =&gt; &#39;should return False&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">[&#39;n&#39;,&#39;n&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;] =&gt; &#39;should return False&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;] =&gt; &#39;should return True&#39;</span></span>
<span class="line"><span style="color:#24292e;">[&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;,&#39;w&#39;,&#39;e&#39;] =&gt; &#39;should return False&#39;</span></span>
<span class="line"><span style="color:#24292e;">[&#39;w&#39;] =&gt; &#39;should return False&#39;</span></span>
<span class="line"><span style="color:#24292e;">[&#39;n&#39;,&#39;n&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;,&#39;n&#39;,&#39;s&#39;] =&gt; &#39;should return False&#39;</span></span></code></pre></div><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-bTm2F" id="tab-gOcrApp" checked="checked"><label for="tab-gOcrApp">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">take_a_ten_minute_walk</span><span style="color:#E1E4E8;">(walk):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(walk) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> walk.count(</span><span style="color:#9ECBFF;">&#39;n&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> walk.count(</span><span style="color:#9ECBFF;">&#39;s&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> walk.count(</span><span style="color:#9ECBFF;">&#39;e&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> walk.count(</span><span style="color:#9ECBFF;">&#39;w&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(take_a_ten_minute_walk(</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&#39;n&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;s&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;n&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;s&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;n&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;s&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;n&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;s&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;n&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;s&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">take_a_ten_minute_walk</span><span style="color:#24292E;">(walk):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(walk) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> walk.count(</span><span style="color:#032F62;">&#39;n&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> walk.count(</span><span style="color:#032F62;">&#39;s&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> walk.count(</span><span style="color:#032F62;">&#39;e&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> walk.count(</span><span style="color:#032F62;">&#39;w&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(take_a_ten_minute_walk(</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&#39;n&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;s&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;n&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;s&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;n&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;s&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;n&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;s&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;n&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;s&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div></div>`,7),p=[o];function t(r,c,i,y,E,u){return n(),a("div",null,p)}const F=s(l,[["render",t]]);export{k as __pageData,F as default};
