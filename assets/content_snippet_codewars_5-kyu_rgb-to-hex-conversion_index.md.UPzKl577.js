import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.QBCT-Upj.js";const u=JSON.parse('{"title":"RGB To Hex Conversion","description":"","frontmatter":{"title":"RGB To Hex Conversion"},"headers":[],"relativePath":"content/snippet/codewars/5-kyu/rgb-to-hex-conversion/index.md","filePath":"content/snippet/codewars/5-kyu/rgb-to-hex-conversion/index.md"}'),e={name:"content/snippet/codewars/5-kyu/rgb-to-hex-conversion/index.md"},l=o(`<h1 id="rgb-to-hex-conversion" tabindex="-1">RGB To Hex Conversion <a class="header-anchor" href="#rgb-to-hex-conversion" aria-label="Permalink to &quot;RGB To Hex Conversion&quot;">​</a></h1><p>The rgb function is incomplete. Complete it so that passing in RGB decimal values will result in a hexadecimal representation being returned. Valid decimal values for RGB are 0 - 255. Any values that fall out of that range must be rounded to the closest valid value.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>Your answer should always be 6 characters long, the shorthand with 3 will not work here.</p></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>The following are examples of expected output values:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rgb_to_hex_conversion(255, 255, 255) # returns FFFFFF</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb_to_hex_conversion(255, 255, 300) # returns FFFFFF</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb_to_hex_conversion(0,0,0) # returns 000000</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb_to_hex_conversion(148, 0, 211) # returns 9400D3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rgb_to_hex_conversion(255, 255, 255) # returns FFFFFF</span></span>
<span class="line"><span style="color:#24292e;">rgb_to_hex_conversion(255, 255, 300) # returns FFFFFF</span></span>
<span class="line"><span style="color:#24292e;">rgb_to_hex_conversion(0,0,0) # returns 000000</span></span>
<span class="line"><span style="color:#24292e;">rgb_to_hex_conversion(148, 0, 211) # returns 9400D3</span></span></code></pre></div><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-NMApC" id="tab-RGkuvPP" checked="checked"><label for="tab-RGkuvPP">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rgb_to_hex_conversion</span><span style="color:#E1E4E8;">(r, g, b):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">{</span><span style="color:#F97583;">:02X</span><span style="color:#79B8FF;">}{</span><span style="color:#F97583;">:02X</span><span style="color:#79B8FF;">}{</span><span style="color:#F97583;">:02X</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">.format(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;">(r, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;">(g, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;">(b, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(rgb_to_hex_conversion(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">256</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rgb_to_hex_conversion</span><span style="color:#24292E;">(r, g, b):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{</span><span style="color:#D73A49;">:02X</span><span style="color:#005CC5;">}{</span><span style="color:#D73A49;">:02X</span><span style="color:#005CC5;">}{</span><span style="color:#D73A49;">:02X</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">.format(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">min</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">max</span><span style="color:#24292E;">(r, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">255</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">min</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">max</span><span style="color:#24292E;">(g, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">255</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">min</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">max</span><span style="color:#24292E;">(b, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">255</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(rgb_to_hex_conversion(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">255</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">256</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div></div>`,8),p=[l];function r(t,c,i,y,E,d){return n(),a("div",null,p)}const h=s(e,[["render",r]]);export{u as __pageData,h as default};
