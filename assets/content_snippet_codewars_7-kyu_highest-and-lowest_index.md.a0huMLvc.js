import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.QBCT-Upj.js";const E=JSON.parse('{"title":"Highest and Lowest","description":"","frontmatter":{"title":"Highest and Lowest"},"headers":[],"relativePath":"content/snippet/codewars/7-kyu/highest-and-lowest/index.md","filePath":"content/snippet/codewars/7-kyu/highest-and-lowest/index.md"}'),t={name:"content/snippet/codewars/7-kyu/highest-and-lowest/index.md"},o=e(`<h1 id="highest-and-lowest" tabindex="-1">Highest and Lowest <a class="header-anchor" href="#highest-and-lowest" aria-label="Permalink to &quot;Highest and Lowest&quot;">​</a></h1><p>In this little assignment you are given a string of space separated numbers, and have to return the highest and lowest number.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Input: &quot;1 2 3 4 5&quot;   =&gt;  Output: &quot;5 1&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">Input: &quot;1 2 -3 4 5&quot;  =&gt;  Output: &quot;5 -3&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">Input: &quot;1 9 3 4 -5&quot;  =&gt;  Output: &quot;9 -5&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">highest_and_lowest(&quot;1 2 3 4 5&quot;);  // return &quot;5 1&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">highest_and_lowest(&quot;1 2 -3 4 5&quot;); // return &quot;5 -3&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">highest_and_lowest(&quot;1 9 3 4 -5&quot;); // return &quot;9 -5&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Input: &quot;1 2 3 4 5&quot;   =&gt;  Output: &quot;5 1&quot;</span></span>
<span class="line"><span style="color:#24292e;">Input: &quot;1 2 -3 4 5&quot;  =&gt;  Output: &quot;5 -3&quot;</span></span>
<span class="line"><span style="color:#24292e;">Input: &quot;1 9 3 4 -5&quot;  =&gt;  Output: &quot;9 -5&quot;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">highest_and_lowest(&quot;1 2 3 4 5&quot;);  // return &quot;5 1&quot;</span></span>
<span class="line"><span style="color:#24292e;">highest_and_lowest(&quot;1 2 -3 4 5&quot;); // return &quot;5 -3&quot;</span></span>
<span class="line"><span style="color:#24292e;">highest_and_lowest(&quot;1 9 3 4 -5&quot;); // return &quot;9 -5&quot;</span></span></code></pre></div><h3 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h3><ul><li>All numbers are valid <code>Int32</code>, no <em>need</em> to validate them.</li><li>There will always be at least one number in the input string.</li><li>Output string must be two numbers separated by a single space, and highest number is first.</li></ul><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-QS2HP" id="tab-BfYe2b6" checked="checked"><label for="tab-BfYe2b6">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">highest_and_lowest</span><span style="color:#E1E4E8;">(numbers):</span></span>
<span class="line"><span style="color:#E1E4E8;">    numbers </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, numbers.split()))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;">(numbers)) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39; &#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;">(numbers))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(highest_and_lowest(</span><span style="color:#9ECBFF;">&quot;1 2 3 4 5&quot;</span><span style="color:#E1E4E8;">))  </span><span style="color:#6A737D;"># return &quot;5 1&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(highest_and_lowest(</span><span style="color:#9ECBFF;">&quot;1 2 -3 4 5&quot;</span><span style="color:#E1E4E8;">))  </span><span style="color:#6A737D;"># return &quot;5 -3&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(highest_and_lowest(</span><span style="color:#9ECBFF;">&quot;1 9 3 4 -5&quot;</span><span style="color:#E1E4E8;">))  </span><span style="color:#6A737D;"># return &quot;9 -5&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">highest_and_lowest</span><span style="color:#24292E;">(numbers):</span></span>
<span class="line"><span style="color:#24292E;">    numbers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">map</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, numbers.split()))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">max</span><span style="color:#24292E;">(numbers)) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">min</span><span style="color:#24292E;">(numbers))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(highest_and_lowest(</span><span style="color:#032F62;">&quot;1 2 3 4 5&quot;</span><span style="color:#24292E;">))  </span><span style="color:#6A737D;"># return &quot;5 1&quot;</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(highest_and_lowest(</span><span style="color:#032F62;">&quot;1 2 -3 4 5&quot;</span><span style="color:#24292E;">))  </span><span style="color:#6A737D;"># return &quot;5 -3&quot;</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(highest_and_lowest(</span><span style="color:#032F62;">&quot;1 9 3 4 -5&quot;</span><span style="color:#24292E;">))  </span><span style="color:#6A737D;"># return &quot;9 -5&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div></div>`,8),l=[o];function p(r,c,i,u,y,d){return n(),a("div",null,l)}const q=s(t,[["render",p]]);export{E as __pageData,q as default};
