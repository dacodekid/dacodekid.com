import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.QBCT-Upj.js";const b=JSON.parse('{"title":"Bishop and Pawn","description":"","frontmatter":{"title":"Bishop and Pawn"},"headers":[],"relativePath":"content/snippet/code-signal/arcade/intro/dark-wilderness/bishop-and-pawn/index.md","filePath":"content/snippet/code-signal/arcade/intro/dark-wilderness/bishop-and-pawn/index.md"}'),l={name:"content/snippet/code-signal/arcade/intro/dark-wilderness/bishop-and-pawn/index.md"},o=p(`<h1 id="bishop-and-pawn" tabindex="-1">Bishop and Pawn <a class="header-anchor" href="#bishop-and-pawn" aria-label="Permalink to &quot;Bishop and Pawn&quot;">​</a></h1><p>Given the positions of a white <code>bishop</code> and a black <code>pawn</code> on the standard chess board, determine whether the bishop can capture the pawn in one move.</p><p>The bishop has no restrictions in distance for each move, but is limited to diagonal movement. Check out the example below to see how it can move:</p><table><thead><tr><th style="text-align:center;"><img src="https://codesignal.s3.amazonaws.com/tasks/bishopAndPawn/img/bishop.jpg?_tm=1624426127191" alt=""></th></tr></thead><tbody><tr><td style="text-align:center;"><strong>image credit</strong> : CodeSignal</td></tr></tbody></table><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><ul><li><p>For <code>bishop = &quot;a1&quot;</code> and <code>pawn = &quot;c3&quot;</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">bishop_and_pawn(bishop, pawn) = true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">bishop_and_pawn(bishop, pawn) = true</span></span></code></pre></div><table><thead><tr><th style="text-align:center;"><img src="https://codesignal.s3.amazonaws.com/tasks/bishopAndPawn/img/ex1.jpg?_tm=1624426127437" alt=""></th></tr></thead><tbody><tr><td style="text-align:center;"><strong>image credit</strong> : CodeSignal</td></tr></tbody></table></li><li><p>For <code>bishop = &quot;h1&quot;</code> and <code>pawn = &quot;h3&quot;</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">bishop_and_pawn(bishop, pawn) = false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">bishop_and_pawn(bishop, pawn) = false</span></span></code></pre></div><table><thead><tr><th style="text-align:center;"><img src="https://codesignal.s3.amazonaws.com/tasks/bishopAndPawn/img/ex2.jpg?_tm=1624426127674" alt=""></th></tr></thead><tbody><tr><td style="text-align:center;"><strong>image credit</strong> : CodeSignal</td></tr></tbody></table></li></ul><h2 id="input-output" tabindex="-1">Input/Output <a class="header-anchor" href="#input-output" aria-label="Permalink to &quot;Input/Output&quot;">​</a></h2><ul><li><p><strong>[input] string bishop</strong></p><p>Coordinates of the white bishop in the chess notation.</p><p><em>Guaranteed constraints:</em><code>bishop.length = 2</code>, <code>&#39;a&#39; ≤ bishop[0] ≤ &#39;h&#39;</code>, <code>1 ≤ bishop[1] ≤ 8</code>.</p></li><li><p><strong>[input] string pawn</strong></p><p>Coordinates of the black pawn in the same notation.</p><p><em>Guaranteed constraints:</em><code>pawn.length = 2</code>, <code>&#39;a&#39; ≤ pawn[0] ≤ &#39;h&#39;</code>, <code>1 ≤ pawn[1] ≤ 8</code>.</p></li></ul><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-3TMqg" id="tab-4V3NN8c" checked="checked"><label for="tab-4V3NN8c">PYTHON</label><input type="radio" name="group-3TMqg" id="tab-oy3t7Gx"><label for="tab-oy3t7Gx">JAVASCRIPT</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bishop_and_pawn</span><span style="color:#E1E4E8;">(bishop, pawn):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">        bishop[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> pawn[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">and</span></span>
<span class="line"><span style="color:#E1E4E8;">        bishop[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> pawn[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">and</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span></span>
<span class="line"><span style="color:#E1E4E8;">            (</span><span style="color:#79B8FF;">ord</span><span style="color:#E1E4E8;">(bishop[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(bishop[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])) </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">==</span></span>
<span class="line"><span style="color:#E1E4E8;">            (</span><span style="color:#79B8FF;">ord</span><span style="color:#E1E4E8;">(pawn[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(pawn[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])) </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(bishop_and_pawn(</span><span style="color:#9ECBFF;">&#39;a1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;b1&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(bishop_and_pawn(</span><span style="color:#9ECBFF;">&#39;a1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;c3&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(bishop_and_pawn(</span><span style="color:#9ECBFF;">&#39;g1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;f3&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(bishop_and_pawn(</span><span style="color:#9ECBFF;">&#39;h1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;h3&#39;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bishop_and_pawn</span><span style="color:#24292E;">(bishop, pawn):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">        bishop[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> pawn[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">and</span></span>
<span class="line"><span style="color:#24292E;">        bishop[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> pawn[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">and</span></span>
<span class="line"><span style="color:#24292E;">        (</span></span>
<span class="line"><span style="color:#24292E;">            (</span><span style="color:#005CC5;">ord</span><span style="color:#24292E;">(bishop[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(bishop[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])) </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">==</span></span>
<span class="line"><span style="color:#24292E;">            (</span><span style="color:#005CC5;">ord</span><span style="color:#24292E;">(pawn[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(pawn[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])) </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(bishop_and_pawn(</span><span style="color:#032F62;">&#39;a1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b1&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(bishop_and_pawn(</span><span style="color:#032F62;">&#39;a1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c3&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(bishop_and_pawn(</span><span style="color:#032F62;">&#39;g1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;f3&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(bishop_and_pawn(</span><span style="color:#032F62;">&#39;h1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;h3&#39;</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bishopAndPawn</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">bishop</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">pawn</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">abs</span><span style="color:#E1E4E8;">(bishop.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> pawn.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">abs</span><span style="color:#E1E4E8;">(bishop.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> pawn.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">bishopAndPawn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;a1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;b1&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">bishopAndPawn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;a1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;c3&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">bishopAndPawn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;g1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;f3&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">bishopAndPawn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;h1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;h3&#39;</span><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bishopAndPawn</span><span style="color:#24292E;">(</span><span style="color:#E36209;">bishop</span><span style="color:#24292E;">, </span><span style="color:#E36209;">pawn</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(bishop.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> pawn.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(bishop.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> pawn.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">bishopAndPawn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;a1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;b1&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">bishopAndPawn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;a1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;c3&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">bishopAndPawn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;g1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;f3&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">bishopAndPawn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;h1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;h3&#39;</span><span style="color:#24292E;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div></div>`,10),e=[o];function t(c,r,E,i,y,d){return n(),a("div",null,e)}const F=s(l,[["render",t]]);export{b as __pageData,F as default};
