import{_ as s,o as e,c as a,Q as o}from"./chunks/framework.QBCT-Upj.js";const b=JSON.parse('{"title":"Arithmetic Expression","description":"","frontmatter":{"title":"Arithmetic Expression"},"headers":[],"relativePath":"content/snippet/code-signal/arcade/the-core/at-the-crossroads/arithmetic-expression/index.md","filePath":"content/snippet/code-signal/arcade/the-core/at-the-crossroads/arithmetic-expression/index.md"}'),n={name:"content/snippet/code-signal/arcade/the-core/at-the-crossroads/arithmetic-expression/index.md"},p=o(`<h1 id="arithmetic-expression" tabindex="-1">Arithmetic Expression <a class="header-anchor" href="#arithmetic-expression" aria-label="Permalink to &quot;Arithmetic Expression&quot;">​</a></h1><p>Consider an arithmetic expression of the form <code>a#b=c</code>. Check whether it is possible to replace <code>#</code> with one of the four signs: <code>+</code>, <code>-</code>, <code>*</code> or <code>/</code> to obtain a correct expression.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><ul><li><p>For <code>a = 2</code>, <code>b = 3</code>, and <code>c = 5</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">arithmetic_expression(a, b, c) = true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">arithmetic_expression(a, b, c) = true</span></span></code></pre></div><p>We can replace <code>#</code> with a <code>+</code> to obtain <code>2 + 3 = 5</code>, so the answer is <code>true</code>.</p></li><li><p>For <code>a = 8</code>, <code>b = 2</code>, and <code>c = 4</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">arithmetic_expression(a, b, c) = true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">arithmetic_expression(a, b, c) = true</span></span></code></pre></div><p>We can replace <code>#</code> with a <code>/</code> to obtain <code>8 / 2 = 4</code>, so the answer is <code>true</code>.</p></li><li><p>For <code>a = 8</code>, <code>b = 3</code>, and <code>c = 2</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">arithmetic_expression(a, b, c) = false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">arithmetic_expression(a, b, c) = false</span></span></code></pre></div><ul><li><code>8 + 3 = 11 ≠ 2</code>;</li><li><code>8 - 3 = 5 ≠ 2</code>;</li><li><code>8 * 3 = 24 ≠ 2</code>;</li><li><code>8 / 3 = 2.(6) ≠ 2</code>.</li></ul><p>So the answer is <code>false</code>.</p></li></ul><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-btx3-" id="tab-EcV1iB7" checked="checked"><label for="tab-EcV1iB7">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">arithmetic_expression</span><span style="color:#E1E4E8;">(a, b, c):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (a </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> c) </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> (a </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> c) </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> (a </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> c) </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> (a </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> c)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(arithmetic_expression(</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">arithmetic_expression</span><span style="color:#24292E;">(a, b, c):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> c) </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> (a </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> c) </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> (a </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> c) </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> (a </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> c)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(arithmetic_expression(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div>`,6),l=[p];function c(t,r,i,d,h,y){return e(),a("div",null,l)}const u=s(n,[["render",c]]);export{b as __pageData,u as default};
