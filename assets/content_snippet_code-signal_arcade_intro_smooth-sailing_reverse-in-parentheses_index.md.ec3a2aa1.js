import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.b2e84fab.js";const b=JSON.parse('{"title":"Reverse In Parentheses","description":"","frontmatter":{"title":"Reverse In Parentheses"},"headers":[],"relativePath":"content/snippet/code-signal/arcade/intro/smooth-sailing/reverse-in-parentheses/index.md","filePath":"content/snippet/code-signal/arcade/intro/smooth-sailing/reverse-in-parentheses/index.md"}'),p={name:"content/snippet/code-signal/arcade/intro/smooth-sailing/reverse-in-parentheses/index.md"},l=e(`<h1 id="reverse-in-parentheses" tabindex="-1">Reverse In Parentheses <a class="header-anchor" href="#reverse-in-parentheses" aria-label="Permalink to &quot;Reverse In Parentheses&quot;">​</a></h1><p>Write a function that reverses characters in (possibly nested) parentheses in the input string.</p><p>Input strings will always be well-formed with matching <code>()</code>s.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><ul><li><p>For <code>inputString = &quot;(bar)&quot;</code>, the output should be</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">reverse_in_parentheses(inputString) = &quot;rab&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">reverse_in_parentheses(inputString) = &quot;rab&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>For <code>inputString = &quot;foo(bar)baz&quot;</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">reverse_in_parentheses(inputString) = &quot;foorabbaz&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">reverse_in_parentheses(inputString) = &quot;foorabbaz&quot;</span></span></code></pre></div></li><li><p>For <code>inputString = &quot;foo(bar)baz(blim)&quot;</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">reverse_in_parentheses(inputString) = &quot;foorabbazmilb&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">reverse_in_parentheses(inputString) = &quot;foorabbazmilb&quot;</span></span></code></pre></div></li><li><p>For <code>inputString = &quot;foo(bar(baz))blim&quot;</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">reverse_in_parentheses(inputString) = &quot;foobazrabblim&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">reverse_in_parentheses(inputString) = &quot;foobazrabblim&quot;</span></span></code></pre></div><p>Because <code>&quot;foo(bar(baz))blim&quot;</code> becomes <code>&quot;foo(barzab)blim&quot;</code> and then <code>&quot;foobazrabblim&quot;</code>.</p></li></ul><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-1RSVt" id="tab-4JWNFxZ" checked="checked"><label for="tab-4JWNFxZ">PYTHON</label><input type="radio" name="group-1RSVt" id="tab-ULGZxBO"><label for="tab-ULGZxBO">JAVASCRIPT</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> re</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reverse_in_parentheses</span><span style="color:#E1E4E8;">(inputString):</span></span>
<span class="line"><span style="color:#E1E4E8;">    m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> re.search(</span><span style="color:#F97583;">r</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#85E89D;font-weight:bold;">\\(</span><span style="color:#79B8FF;">([</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">()]</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">)</span><span style="color:#85E89D;font-weight:bold;">\\)</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, inputString)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> m </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> inputString</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> reverse_in_parentheses(inputString[: m.start()] </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> m.group(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)[::</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> inputString[m.end():])</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(reverse_in_parentheses(</span><span style="color:#9ECBFF;">&quot;(bar)&quot;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> re</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reverse_in_parentheses</span><span style="color:#24292E;">(inputString):</span></span>
<span class="line"><span style="color:#24292E;">    m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> re.search(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;</span><span style="color:#22863A;font-weight:bold;">\\(</span><span style="color:#005CC5;">([</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">()]</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">)</span><span style="color:#22863A;font-weight:bold;">\\)</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, inputString)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> m </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> inputString</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> reverse_in_parentheses(inputString[: m.start()] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.group(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)[::</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> inputString[m.end():])</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(reverse_in_parentheses(</span><span style="color:#032F62;">&quot;(bar)&quot;</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reverseInParentheses</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">inputString</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">regex</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\(</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">[</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">()]</span><span style="color:#F97583;">*</span><span style="color:#DBEDFF;">)</span><span style="color:#85E89D;font-weight:bold;">\\)</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inputString;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> match </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(regex);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (match) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">reversed</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> match[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">reverse</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(regex, reversed);</span></span>
<span class="line"><span style="color:#E1E4E8;">    match </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result.</span><span style="color:#B392F0;">match</span><span style="color:#E1E4E8;">(regex);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">reverseInParentheses</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;foo(bar(baz))blim&#39;</span><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reverseInParentheses</span><span style="color:#24292E;">(</span><span style="color:#E36209;">inputString</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">regex</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#22863A;font-weight:bold;">\\(</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">[</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">()]</span><span style="color:#D73A49;">*</span><span style="color:#032F62;">)</span><span style="color:#22863A;font-weight:bold;">\\)</span><span style="color:#032F62;">/</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inputString;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> match </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> result.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(regex);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (match) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">reversed</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> match[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> result.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(regex, reversed);</span></span>
<span class="line"><span style="color:#24292E;">    match </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> result.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(regex);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">reverseInParentheses</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;foo(bar(baz))blim&#39;</span><span style="color:#24292E;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></div></div>`,7),o=[l];function t(r,c,i,y,E,u){return n(),a("div",null,o)}const h=s(p,[["render",t]]);export{b as __pageData,h as default};
