import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.b2e84fab.js";const u=JSON.parse('{"title":"Gravity Flip","description":"","frontmatter":{"title":"Gravity Flip"},"headers":[],"relativePath":"content/snippet/codewars/8-kyu/gravity-flip/index.md","filePath":"content/snippet/codewars/8-kyu/gravity-flip/index.md"}'),l={name:"content/snippet/codewars/8-kyu/gravity-flip/index.md"},p=e(`<h1 id="gravity-flip" tabindex="-1">Gravity Flip <a class="header-anchor" href="#gravity-flip" aria-label="Permalink to &quot;Gravity Flip&quot;">​</a></h1><p>Bob is bored during his physics lessons so he&#39;s built himself a toy box to help pass the time. The box is special because it has the ability to change gravity.</p><p>There are some columns of toy cubes in the box arranged in a line. The <code>i</code>-th column contains <code>a_i</code> cubes. At first, the gravity in the box is pulling the cubes downwards. When Bob switches the gravity, it begins to pull all the cubes to a certain side of the box, <code>d</code>, which can be either <code>&#39;L&#39;</code> or <code>&#39;R&#39;</code> (left or right). Below is an example of what a box of cubes might look like before and after switching gravity.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">    +---+                                       +---+</span></span>
<span class="line"><span style="color:#e1e4e8;">    |   |                                       |   |</span></span>
<span class="line"><span style="color:#e1e4e8;">    +---+                                       +---+</span></span>
<span class="line"><span style="color:#e1e4e8;">    +---++---+     +---+              +---++---++---+</span></span>
<span class="line"><span style="color:#e1e4e8;">    |   ||   |     |   |   --&gt;        |   ||   ||   |</span></span>
<span class="line"><span style="color:#e1e4e8;">    +---++---+     +---+              +---++---++---+</span></span>
<span class="line"><span style="color:#e1e4e8;">    +---++---++---++---+         +---++---++---++---+</span></span>
<span class="line"><span style="color:#e1e4e8;">    |   ||   ||   ||   |         |   ||   ||   ||   |</span></span>
<span class="line"><span style="color:#e1e4e8;">    +---++---++---++---+         +---++---++---++---+</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">    +---+                                       +---+</span></span>
<span class="line"><span style="color:#24292e;">    |   |                                       |   |</span></span>
<span class="line"><span style="color:#24292e;">    +---+                                       +---+</span></span>
<span class="line"><span style="color:#24292e;">    +---++---+     +---+              +---++---++---+</span></span>
<span class="line"><span style="color:#24292e;">    |   ||   |     |   |   --&gt;        |   ||   ||   |</span></span>
<span class="line"><span style="color:#24292e;">    +---++---+     +---+              +---++---++---+</span></span>
<span class="line"><span style="color:#24292e;">    +---++---++---++---+         +---++---++---++---+</span></span>
<span class="line"><span style="color:#24292e;">    |   ||   ||   ||   |         |   ||   ||   ||   |</span></span>
<span class="line"><span style="color:#24292e;">    +---++---++---++---+         +---++---++---++---+</span></span></code></pre></div><p>Given the initial configuration of the cubes in the box, find out how many cubes are in each of the <code>n</code> columns after Bob switches the gravity.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">gravity_flip(&#39;R&#39;, { 3, 2, 1, 2 })     =&gt;  { 1, 2, 2, 3 }</span></span>
<span class="line"><span style="color:#e1e4e8;">gravity_flip(&#39;L&#39;, { 1, 4, 5, 3, 5 })  =&gt;  { 5, 5, 4, 3, 1 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">gravity_flip(&#39;R&#39;, { 3, 2, 1, 2 })     =&gt;  { 1, 2, 2, 3 }</span></span>
<span class="line"><span style="color:#24292e;">gravity_flip(&#39;L&#39;, { 1, 4, 5, 3, 5 })  =&gt;  { 5, 5, 4, 3, 1 }</span></span></code></pre></div><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-itDB9" id="tab-HtGW5Hf" checked="checked"><label for="tab-HtGW5Hf">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">gravity_flip</span><span style="color:#E1E4E8;">(direction, array):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> direction </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;R&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sorted</span><span style="color:#E1E4E8;">(array)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">elif</span><span style="color:#E1E4E8;"> direction </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;L&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sorted</span><span style="color:#E1E4E8;">(array, </span><span style="color:#FFAB70;">reverse</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(gravity_flip(</span><span style="color:#9ECBFF;">&#39;L&#39;</span><span style="color:#E1E4E8;">, [</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">gravity_flip</span><span style="color:#24292E;">(direction, array):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> direction </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;R&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(array)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> direction </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;L&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(array, </span><span style="color:#E36209;">reverse</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(gravity_flip(</span><span style="color:#032F62;">&#39;L&#39;</span><span style="color:#24292E;">, [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div></div>`,9),o=[p];function t(c,r,i,y,d,E){return a(),n("div",null,o)}const b=s(l,[["render",t]]);export{u as __pageData,b as default};
