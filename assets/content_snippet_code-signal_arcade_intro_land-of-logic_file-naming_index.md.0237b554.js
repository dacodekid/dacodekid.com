import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b2e84fab.js";const d=JSON.parse('{"title":"File Naming","description":"","frontmatter":{"title":"File Naming"},"headers":[],"relativePath":"content/snippet/code-signal/arcade/intro/land-of-logic/file-naming/index.md","filePath":"content/snippet/code-signal/arcade/intro/land-of-logic/file-naming/index.md"}'),p={name:"content/snippet/code-signal/arcade/intro/land-of-logic/file-naming/index.md"},e=l(`<h1 id="file-naming" tabindex="-1">File Naming <a class="header-anchor" href="#file-naming" aria-label="Permalink to &quot;File Naming&quot;">​</a></h1><p>You are given an array of desired filenames in the order of their creation. Since two files cannot have equal names, the one which comes later will have an addition to its name in a form of <code>(k)</code>, where <code>k</code> is the smallest positive integer such that the obtained name is not used yet.</p><p>Return an array of names that will be given to the files.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>For <code>names = [&quot;doc&quot;, &quot;doc&quot;, &quot;image&quot;, &quot;doc(1)&quot;, &quot;doc&quot;]</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">file_naming(names) = [&quot;doc&quot;, &quot;doc(1)&quot;, &quot;image&quot;, &quot;doc(1)(1)&quot;, &quot;doc(2)&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">file_naming(names) = [&quot;doc&quot;, &quot;doc(1)&quot;, &quot;image&quot;, &quot;doc(1)(1)&quot;, &quot;doc(2)&quot;]</span></span></code></pre></div><h2 id="input-output" tabindex="-1">Input/Output <a class="header-anchor" href="#input-output" aria-label="Permalink to &quot;Input/Output&quot;">​</a></h2><ul><li><p><strong>[input] array.string names</strong></p><p><em>Guaranteed constraints:</em><code>5 ≤ names.length ≤ 1000</code>, <code>1 ≤ names[i].length ≤ 15</code>.</p></li></ul><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-eYaC_" id="tab-qNZJqt4" checked="checked"><label for="tab-qNZJqt4">PYTHON</label><input type="radio" name="group-eYaC_" id="tab-2daVTUG"><label for="tab-2daVTUG">JAVASCRIPT</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">file_naming</span><span style="color:#E1E4E8;">(names):</span></span>
<span class="line"><span style="color:#E1E4E8;">    new_names </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> names:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> new_names:</span></span>
<span class="line"><span style="color:#E1E4E8;">            index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">name</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">index</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">)&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> new_names:</span></span>
<span class="line"><span style="color:#E1E4E8;">                index </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">            name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">name</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">index</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">)&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        new_names.append(name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> new_names</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(file_naming([</span><span style="color:#9ECBFF;">&quot;doc&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;doc&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;image&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;doc(1)&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;doc&quot;</span><span style="color:#E1E4E8;">]))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">file_naming</span><span style="color:#24292E;">(names):</span></span>
<span class="line"><span style="color:#24292E;">    new_names </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> names:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> new_names:</span></span>
<span class="line"><span style="color:#24292E;">            index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">name</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">index</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">)&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> new_names:</span></span>
<span class="line"><span style="color:#24292E;">                index </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">            name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">name</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">index</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">)&#39;</span></span>
<span class="line"><span style="color:#24292E;">        new_names.append(name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> new_names</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(file_naming([</span><span style="color:#032F62;">&quot;doc&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;doc&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;image&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;doc(1)&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;doc&quot;</span><span style="color:#24292E;">]))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// def file_naming(names):</span></span>
<span class="line"><span style="color:#6A737D;">//     new_names = []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//     for name in names:</span></span>
<span class="line"><span style="color:#6A737D;">//         if name in new_names:</span></span>
<span class="line"><span style="color:#6A737D;">//             index = 1</span></span>
<span class="line"><span style="color:#6A737D;">//             while f&#39;{name}({index})&#39; in new_names:</span></span>
<span class="line"><span style="color:#6A737D;">//                 index += 1</span></span>
<span class="line"><span style="color:#6A737D;">//             name = f&#39;{name}({index})&#39;</span></span>
<span class="line"><span style="color:#6A737D;">//         new_names.append(name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//     return new_names</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// print(file_naming([&quot;doc&quot;, &quot;doc&quot;, &quot;image&quot;, &quot;doc(1)&quot;, &quot;doc&quot;]))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fileNaming</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">names</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">newNames</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> names) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (newNames.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(name)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (newNames.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}(\${</span><span style="color:#E1E4E8;">index</span><span style="color:#9ECBFF;">})\`</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        index</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}(\${</span><span style="color:#E1E4E8;">index</span><span style="color:#9ECBFF;">})\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    newNames.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> newNames;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">fileNaming</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;doc&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;doc&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;image&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;doc(1)&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;doc&#39;</span><span style="color:#E1E4E8;">]));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// def file_naming(names):</span></span>
<span class="line"><span style="color:#6A737D;">//     new_names = []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//     for name in names:</span></span>
<span class="line"><span style="color:#6A737D;">//         if name in new_names:</span></span>
<span class="line"><span style="color:#6A737D;">//             index = 1</span></span>
<span class="line"><span style="color:#6A737D;">//             while f&#39;{name}({index})&#39; in new_names:</span></span>
<span class="line"><span style="color:#6A737D;">//                 index += 1</span></span>
<span class="line"><span style="color:#6A737D;">//             name = f&#39;{name}({index})&#39;</span></span>
<span class="line"><span style="color:#6A737D;">//         new_names.append(name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//     return new_names</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// print(file_naming([&quot;doc&quot;, &quot;doc&quot;, &quot;image&quot;, &quot;doc(1)&quot;, &quot;doc&quot;]))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fileNaming</span><span style="color:#24292E;">(</span><span style="color:#E36209;">names</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">newNames</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> names) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (newNames.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(name)) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (newNames.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}(\${</span><span style="color:#24292E;">index</span><span style="color:#032F62;">})\`</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">        index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}(\${</span><span style="color:#24292E;">index</span><span style="color:#032F62;">})\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    newNames.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> newNames;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">fileNaming</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;doc&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;doc&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;image&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;doc(1)&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;doc&#39;</span><span style="color:#24292E;">]));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div></div></div>`,10),o=[e];function c(t,r,i,E,y,m){return n(),a("div",null,o)}const F=s(p,[["render",c]]);export{d as __pageData,F as default};
