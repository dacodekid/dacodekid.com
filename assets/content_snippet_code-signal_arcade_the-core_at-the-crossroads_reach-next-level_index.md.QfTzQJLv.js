import{_ as e,o as a,c as s,Q as n}from"./chunks/framework.QBCT-Upj.js";const v=JSON.parse('{"title":"Reach Next Level","description":"","frontmatter":{"title":"Reach Next Level"},"headers":[],"relativePath":"content/snippet/code-signal/arcade/the-core/at-the-crossroads/reach-next-level/index.md","filePath":"content/snippet/code-signal/arcade/the-core/at-the-crossroads/reach-next-level/index.md"}'),l={name:"content/snippet/code-signal/arcade/the-core/at-the-crossroads/reach-next-level/index.md"},o=n(`<h1 id="reach-next-level" tabindex="-1">Reach Next Level <a class="header-anchor" href="#reach-next-level" aria-label="Permalink to &quot;Reach Next Level&quot;">​</a></h1><p>You are playing an RPG game. Currently your experience points (XP) total is equal to <code>experience</code>. To reach the next level your XP should be at least at <code>threshold</code>. If you kill the monster in front of you, you will gain more experience points in the amount of the <code>reward</code>.</p><p>Given values <code>experience</code>, <code>threshold</code> and <code>reward</code>, check if you reach the next level after killing the monster.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><ul><li><p>For <code>experience = 10</code>, <code>threshold = 15</code>, and <code>reward = 5</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">reach_next_level(experience, threshold, reward) = true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">reach_next_level(experience, threshold, reward) = true</span></span></code></pre></div></li><li><p>For <code>experience = 10</code>, <code>threshold = 15</code>, and <code>reward = 4</code>, the output should be</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">reach_next_level(experience, threshold, reward) = false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">reach_next_level(experience, threshold, reward) = false</span></span></code></pre></div></li></ul><h2 id="input-output" tabindex="-1">Input/Output <a class="header-anchor" href="#input-output" aria-label="Permalink to &quot;Input/Output&quot;">​</a></h2><ul><li><p><strong>[input] integer experience</strong></p><p><em>Guaranteed constraints:</em><code>3 ≤ experience ≤ 250</code>.</p></li><li><p><strong>[input] integer threshold</strong></p><p><em>Guaranteed constraints:</em><code>5 ≤ threshold ≤ 300</code>.</p></li><li><p><strong>[input] integer reward</strong></p><p><em>Guaranteed constraints:</em><code>2 ≤ reward ≤ 65</code>.</p></li></ul><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-fkWDJ" id="tab-4DAJHjQ" checked="checked"><label for="tab-4DAJHjQ">PYTHON</label></div><div class="blocks"><div class="language-py vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reach_next_level</span><span style="color:#E1E4E8;">(experience, threshold, reward):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (experience </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> reward) </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> threshold</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(reach_next_level(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reach_next_level</span><span style="color:#24292E;">(experience, threshold, reward):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (experience </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> reward) </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> threshold</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(reach_next_level(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div>`,9),t=[o];function p(r,c,i,d,h,u){return a(),s("div",null,t)}const x=e(l,[["render",p]]);export{v as __pageData,x as default};
